# [12288, -10075, 29710, 15686, -18900, -17715, 15992, 24431, 6220, 28403, -23148, 18480, -22905, 5411, -7602, 15560, -26674, 11109, -4323, 6146, -1523, 4312, 10666, -15343, -17679, 7284, 20709, -7103, 24305, 14334, -12281, 17314, 26061, 25616, 17453, 16618, -24230, -19788, 21172, 11339, 2202, -22442, -20997, 1879, -8773, -8736, 5310, -23372, 12621, -25596, -28609, -13309, -13, 10336, 15812, -21193, 21576, -1897, -12311, -6988, -25143, -3501, 23231, 26610, 12618, 25834, -29140, 21011, 23427, 1494, 15215, 23013, -15739, 8325, 5359, -12932, 18111, -72, -12509, 20116, 24390, 1920, 17487, 25536, 24934, -6784, -16417, -2222, -16569, -25594, 4491, 14249, -28927, 27281, 3297, 5998, 6259, 4577, 12415, 3779, -8856, 3994, 19941, 11047, 2866, -24443, -17299, -9556, 12244, 6376, -13694, -14647, -22225, 21872, 7543, -6935, 17736, -2464, 9390, 1133, 18202, -9733, -26011, 13474, 29793, -26628, -26124, 27776, 970, 14277, -23213, 775, -9318, 29014, -5645, -27027, -21822, -17450, -5, -655, 22807, -20981, 16310, 27605, -18393, 914, 7323, 599, -12503, -28684, 5835, -5627, 25891, -11801, 21243, -21506, 22542, -5097, 8115, 178, 10427, 25808, 10836, -11213, 18488, 21293, 14652, 12260, 42, 21034, 8396, -27956, 13670, -296, -757, 18076, -15597, 4135, -25222, -19603, 8007, 6012, 2704, 28935, 16188, -20848, 13502, -11950, -24466, 5440, 26348, 27378, 7990, -11523, -26393]
# [-70, -68, -29, -45, -34, -88, -32, -38, -25, -95, -68, -96, -28, -45, -59, -95, -73, -8, -37, -49, -47, -9, -61, -91, -11, -90, -16, -25, -17, -4, -14, -38, -38, -85, -46, -16, -22, -63, -54, -14, -51, -4, -20, -44, -74, -78, -83, -91, -35, -43, -49, -89, -100, -27, -39, -95, -90, -90, -92, -48, -44, -4, -37, -13, -73, -28, -61, -32, -95, -43, -83, -43, -51, -19]
# [-433, 69, -931, -31, -171, -282, -505, -459, -462, 738, -871, -807, -722, -896, 630, -366, -881, -727, 253, -484, 714, -994, -150, 827, -829, -850, -349, 177, 325, 344, -336, -834, -516, -883, 38, -424, 237, 345, -769, -408, 448, -459, -666, -227, 990, 944, 379, 0, -655, -130, -6, -894, 647, 311, -764, -579, -735, -777, -50, 939, 523, -496, -504, 332, 649, 104, -811, 532, -458, 247, -699, -911, -539, -758, -47, 38, -783, -169, -241]

def multiplyAdvanced(seq):
    if len(seq) == 3:
        return seq

    max1 = max(seq[0], seq[1], seq[2])
    max3 = min(seq[0], seq[1], seq[2])
    max2 = seq[0] + seq[1] + seq[2] - max1 - max3
    min1 = max3
    min2 = max2

    for n in seq[3:]:
        if n > max1:
            max3 = max2
            max2 = max1
            max1 = n
        elif n > max2:
            max3 = max2
            max2 = n
        elif n > max3:
            max3 = n
        elif n < min1:
            min2 = min1
            min1 = n
        elif n < min2:
            min2 = n

    if max1 * max2 * max3 > min1 * min2 * max1:
        return [max1, max2, max3]
    else:
        return [min1, min2, max1]

l = list(map(int, input().strip().split(' ')))
print(sorted(l))
print(*multiplyAdvanced(l))
