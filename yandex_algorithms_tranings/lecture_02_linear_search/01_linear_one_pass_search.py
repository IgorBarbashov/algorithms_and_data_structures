# Задача #1
# Дана последовательность чисел длиной N
# Найти первое (левое) вхождение положительного числа X в ней
# или вывести -1, если число X не встречалось

# Решение
# Сначала положим в ответ -1, затем будем перебирать все элементы.
# Если текущий элемент равен X и ответ равен -1, запишем в ответ
# текущую позицию

def findx(seq, x):
    ans = -1
    for i in range(len(seq)):
        if ans == -1 and seq[i] == x:
            ans = i
    return ans



# Задача #2
# Дана последовательность чисел длиной N
# Найти последнее (правое) вхождение числа X в ней
# или вывести -1, если число X не встречалось

# Решение
# Сначала положим в ответ -1, затем будем перебирать все элементы.
# Если текущий элемент равен X, запишем в ответ текущую позицию

def findx(seq, x):
    ans = -1
    for i in range(len(seq)):
        if seq[i] == x:
            ans = i
    return ans



# Задача #3
# Дана последовательность чисел длиной N (N > 0)
# Найти максимальное число в последовательности

# Решение #1
# Сначала положим в ответ нулевой элемент последовательности
# (он точно существует), затем будем перебирать все элементы.
# Если текущий элемент больше ответа - запишем в ответ текущий
# элемент

def findx(seq):
    ans = seq[0]
    for i in range(1, len(seq)):
        if seq[i] > ans:
            ans = seq[i]
    return ans

# Решение #2
# Аналогично Решению #1, но запоминаем во временной переменной
# не само значение, а его индекс в последовательности

def findx(seq):
    ansIndex = 0
    for i in range(1, len(seq)):
        if seq[i] > seq[ansIndex]:
            ansIndex = i
    return seq[ansIndex]



# Задача #4
# Дана последовательность чисел длиной N (N > 1)
# Найти максимальное число в последовательности
# и второе по величине число (такое, которое будет
# максимальным, если вычеркнуть из последовательности
# одно максимальное число)

# Решение
# Заведем две переменные для первого и второго максимумов. Возьмем
# первые два числа из последовательности и запишем большее из них
# в переменную для первого максимума, а меньшее - для второго.
# Пройдем по всей последовательности. Если очередное число больше
# первого максимума, то запишем во второй максимум значение
# первого, а в первый - текущее число. Если только больше второго,
# запишем текущее число во второй максимум.

def findmax2(seq):
    max1 = max(seq[0], seq[1])
    max2 = min(seq[0], seq[1])
    for i in range(2, len(seq)):
        if seq[i] > max1:
            max2 = max1
            max1 = seq[i]
        elif seq[i] > max2:
            max2 = seq[i]
    return (max1, max2)



# Задача #5
# Дана последовательность чисел длиной N
# Найти минимальное четное число в последовательности
# или вывести -1, если такого не существует

# Решение #1
# В переменную для ответа положим -1. Если очередное число четное,
# а ответ равен -1 или ответ больше текущего числа, то запишем в ответ
# текущее число

def findmineven(seq):
    ans = -1
    for i in range(len(seq)):
        if seq[i] % 2 == 0 and (ans == -1 or seq[i] < ans):
            ans = seq[i]
    return ans

# Решение #2
# Аналогично Решение #1, но признак того встречали ли мы ранее
# подходящее число храним в отдельной булевой переменной.
# Так избегаем ошибки неправильного выбора начального значения
# временной перемнной.

def findmineven(seq):
    flag = False
    ans = -1
    for i in range(len(seq)):
        if seq[i] % 2 == 0 and (not flag or seq[i] < ans):
            flag = True
            ans = seq[i]
    return ans
